plugins {
    id 'com.android.library'
}

android {
    namespace 'com.simdo.ldfsdk'
    compileSdk 33

    defaultConfig {
        minSdk 19
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            //开启混淆必须改成true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    afterEvaluate {
        generateReleaseBuildConfig.enabled = false
        generateDebugBuildConfig.enabled = false
    }
}

task makeJar(type: Copy) {
    delete('build/')
    //from('build/intermediates/packaged-classes/release/classes.jar') //这行表示要打包的文件的路径，根据下面的内容，其实是该路径下的classes.jar
    from('build/intermediates/aar_main_jar/release/')
    //过滤BuildConfig.class
    exclude ("BuildConfig.class")
    exclude ('**/BuildConfig.class')
    //into('libs/')  //这行表示打包完毕后包的生成路径，也就是生成的包存在哪
    into('build/libs/')
    include('classes.jar')  //看到这行，如果你对分包有了解的话，你就可以看出来这行它只是将一些类打包了
    rename ('classes.jar', 'dw_db_sdk_1.6.2.jar')
}
makeJar.dependsOn(build)

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    implementation files('libs/ganymed-ssh2-build210.jar')
    implementation files('libs/Zip4j1.3.3.jar')
    implementation files('libs/commons-net-3.3.jar')
}